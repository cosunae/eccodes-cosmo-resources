#local section DWD

#weil in section.4.def benutzt und diese ist wegen ieeefloat Fehler local
constant productDefinitionTemplateNumberInternal=0 : hidden,no_copy;

#DL as this definition file is used by different centres per link define aliases
# according to centreForLocal
if (centreForLocal != 78) {
alias localDefinitionNumber=grib2LocalSectionNumber;
} else {
alias grib2LocalSectionNumber=localDefinitionNumber;
}

#if (section2Length==20) {
# if (section2Length==20 && tiggeSuiteID == 255) {
 if (section2Length==20 && !(defined(suiteName))) {
#  unsigned[1] localDefinitionNumber: dump;
  unsigned[1] localHostIdentifier: dump;
  unsigned[2] localCreationDateYear: dump;
  unsigned[1] localCreationDateMonth: dump;
  unsigned[1] localCreationDateDay: dump;
  unsigned[1] localCreationDateHour: dump;
  unsigned[1] localCreationDateMinute: dump;
  unsigned[1] localCreationDateSecond: dump;
  unsigned[2] localInformationNumber: dump;
  unsigned[2] localVersionNumber: dump;
  unsigned[2] reserved;

  meta localDecodeDateL evaluate(localCreationDateYear*10000000000 + localCreationDateMonth*100000000 + localCreationDateDay*1000000 + localCreationDateHour*10000 + localCreationDateMinute*100 + localCreationDateSecond);
  meta localDecodeDate sprintf("%d",localDecodeDateL): no_copy, dump;

 } else {

   if ( (localDefinitionNumber == 252 ) || (localDefinitionNumber == 253 )
      || (localDefinitionNumber == 28 )
      || (localDefinitionNumber == 250 ) || (localDefinitionNumber == 254 ) 
      || (localDefinitionNumber == 123 ) || (localDefinitionNumber == 124 ) 
      || (localDefinitionNumber == 125 ) ){
      template  localSection  "grib2/local.78.[localDefinitionNumber:l].def";
   } else {
      section_padding section2Padding : read_only;
#      meta localDecodeDate sprintf("%d",localDecodeDateL): no_copy, dump;
#      meta localValidityDate sprintf("%d",localValidityDateL): dump;
   }
}

if (centreForLocal == 215) {
 # class
 transient marsClass='od';

## typeOfGeneratingProcess
# COSMO-1E, COSMO-2E: 4 = Ensemble forecast
# KENDA-1 det: 0 = Analysis
# KENDA-1 ens: 0 = Analysis
# KENDA-1 mean (laf): 0 = Analysis
# KENDA-1 spread (laf): 0 = Analysis
# KENDA-1 First Guess det: 2 = Forecast
# KENDA-1 First Guess ens: 4 = Ensemble forecast

## generatingProcessIdentifier
# COSMO-1E: 121
# COSMO-2E: 122
# KENDA-1 det: 121
# KENDA-1 ensemble: 121
# KENDA-1 First Guess det: 121 
# KENDA-1 First Guess ens: 121 
# ICON-CH1-EPS: 141 
# ICON-CH2-EPS: 142

##Â backgroundProcess
# COSMO-1E: 0=main run
# COSMO-2E: 0=main run
# KENDA-1 det: 2=assimilation
# KENDA-1 ensemble: 2=assimilation 
# KENDA-1 First Guess det: 0=main run 
# KENDA-1 First Guess ens: 0=main run

 # class
constant marsClass='od';

concept marsStream(unknown) {
    enda = {
      typeOfGeneratingProcess = 0;}
    oper = {
      typeOfGeneratingProcess = 2;}
    enfo = {
      typeOfGeneratingProcess = 4;}
} : no_copy;

concept marsType(unknown) {
    # analysis
    an = {
      typeOfGeneratingProcess = 0;}
    # 1st guess
    fg = {
      typeOfGeneratingProcess = 0;
      backgroundProcess = 0;}
    # det forecast
    fc = {
      typeOfGeneratingProcess = 2;}
    # perturbed forecast
    pf = {
      typeOfGeneratingProcess = 4;}
} : no_copy;

concept marsModel(unknown) {
    COSMO = {
      generatingProcessIdentifier = 121;
      typeOfGeneratingProcess = 4;}
    COSMO = {
      generatingProcessIdentifier = 122;
      typeOfGeneratingProcess = 4;}
    KENDA = {
      generatingProcessIdentifier = 121;}
    KENDA = {
      generatingProcessIdentifier = 122;}
    ICON = {
      generatingProcessIdentifier = 141;}
    ICON = {
      generatingProcessIdentifier = 142;}
} : no_copy;

 constant marsExpver = 1;

 alias mars.class = marsClass;
 alias mars.stream = marsStream;
 alias mars.type = marsType;
 alias mars.model = marsModel;
 alias mars.expver = marsExpver;
}
